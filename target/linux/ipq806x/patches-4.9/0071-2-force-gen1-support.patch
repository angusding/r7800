From c7e950434f81c1e2b9ebffa58ee54e41a076ead4 Mon Sep 17 00:00:00 2001
From: dissent1 <be.dissent+github@gmail.com>
Date: Tue, 20 Jun 2017 13:43:26 +0300
Subject: [PATCH] pci: qcom: force GEN1 support

Cherry-picking https://source.codeaurora.org/quic/qsdk/oss/kernel/linux-msm/commit/?h=eggplant&id=4910cfd150342ec7b038892262923c725a9c4001
---
 drivers/pci/host/pcie-qcom.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/drivers/pci/host/pcie-qcom.c b/drivers/pci/host/pcie-qcom.c
index a9e9fecdfd..96de6815ea 100644
--- a/drivers/pci/host/pcie-qcom.c
+++ b/drivers/pci/host/pcie-qcom.c
@@ -80,6 +80,8 @@
 #define PCIE20_PARF_CONFIG_BITS			0x50
 #define PHY_RX0_EQ(x)				(x << 24)
 
+#define PCIE20_LNK_CONTROL2_LINK_STATUS2        0xA0
+
 #define PCIE20_PARF_DBI_BASE_ADDR		0x168
 #define PCIE20_PARF_SLV_ADDR_SPACE_SIZE		0x16c
 #define PCIE20_PARF_AXI_MSTR_WR_ADDR_HALT	0x178
@@ -148,6 +150,7 @@ struct qcom_pcie {
 	struct phy *phy;
 	struct gpio_desc *reset;
 	struct qcom_pcie_ops *ops;
+	uint32_t force_gen1;
 };
 
 #define to_qcom_pcie(x)		container_of(x, struct qcom_pcie, pp)
@@ -486,6 +489,12 @@ static int qcom_pcie_init_v0(struct qcom_pcie *pcie)
 	/* wait for clock acquisition */
 	usleep_range(1000, 1500);
 
+	if (pcie->force_gen1) {
+		writel_relaxed((readl_relaxed(
+			pcie->pp.dbi_base + PCIE20_LNK_CONTROL2_LINK_STATUS2) | 1),
+			pcie->pp.dbi_base + PCIE20_LNK_CONTROL2_LINK_STATUS2);
+	}
+
 	return 0;
 
 err_deassert_ahb:
@@ -678,6 +687,8 @@ static int qcom_pcie_probe(struct platform_device *pdev)
 	struct qcom_pcie *pcie;
 	struct pcie_port *pp;
 	int ret;
+	uint32_t force_gen1 = 0;
+	struct device_node *np = pdev->dev.of_node;
 
 	pcie = devm_kzalloc(dev, sizeof(*pcie), GFP_KERNEL);
 	if (!pcie)
@@ -690,6 +701,9 @@ static int qcom_pcie_probe(struct platform_device *pdev)
 	if (IS_ERR(pcie->reset))
 		return PTR_ERR(pcie->reset);
 
+	of_property_read_u32(np, "force_gen1", &force_gen1);
+	pcie->force_gen1 = force_gen1;
+
 	res = platform_get_resource_byname(pdev, IORESOURCE_MEM, "parf");
 	pcie->parf = devm_ioremap_resource(dev, res);
 	if (IS_ERR(pcie->parf))
